  image: node:18-slim

  stages:
    - build
    - tests
    - deploy staging
    - deploy production
    - production tests

  cache:
    key:
      files:
        - package.json
    paths:
      - node_modules/
      - .cache/

  variables:
    STAGING_DOMAIN: rantanplan-staging.surge.sh
    PRODUCTION_DOMAIN: rantanplan.surge.sh
    GIT_DEPTH: "1"

  build_website:
    stage: build
    before_script:
      - npm install
      - npm install -g gatsby-cli
    script:
      - gatsby build
      - sed -i "s/%%VERSION%%/$CI_COMMIT_SHORT_SHA/" ./public/index.html
    artifacts:
      paths:
        - public/
      expire_in: 1 week


  run_tests:
    stage: tests
    before_script:
      - apt update && apt install curl -y
      - if [ -d "node_modules" ]; then echo "Using cached node_modules"; else npm install; fi
      - npm install -g gatsby-cli
    script:
      - gatsby serve &
      - sleep 2
      - curl "http://localhost:9000" | grep -q "Gatsby"

  .deploy_template: &deploy
    only:
      - main
    script:
      - npm install -g surge
      - surge --project ./public --domain $DOMAIN
    environment:
      url: https://$DOMAIN

  deploy_staging:
    <<: *deploy
    stage: deploy staging
    variables:
      DOMAIN: $STAGING_DOMAIN
    environment:
      name: staging
    
  deploy_production:
    <<: *deploy
    stage: deploy production
    variables:
      DOMAIN: $PRODUCTION_DOMAIN
    environment:
      name: production
    when: manual

  production_tests:
    image: alpine
    stage: production tests
    needs:
      - deploy_production
    when: on_success
    only:
      - main
    script:
      - apk add --no-cache curl
      - curl -s https://$PRODUCTION_DOMAIN | grep -q "Gatsby"
      - curl -s https://$PRODUCTION_DOMAIN | grep -q "Gatsby" 
